{
  "address": "0xB7734155287182814ac4263014807D2505C63A74",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardController",
          "type": "address"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb55f9abb3b7ded28ebdde4a18b12c359254a606bdec5f40f9325ac5498a9865f",
  "receipt": {
    "to": null,
    "from": "0xabB6D4a1015e291b1bc71e7e56ff2c9204665b07",
    "contractAddress": "0xB7734155287182814ac4263014807D2505C63A74",
    "transactionIndex": 2,
    "gasUsed": "227300",
    "logsBloom": "0x
    "blockHash": "0x9fd2099de2b53da13039462a4281ec6579457ecc64637763f2ab2e6fb3145f35",
    "transactionHash": "0xb55f9abb3b7ded28ebdde4a18b12c359254a606bdec5f40f9325ac5498a9865f",
    "logs": [],
    "blockNumber": 18577397,
    "cumulativeGasUsed": "440745",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "0ece8126b14982d6d8d775ea1585ad62",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardController\",\"type\":\"address\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fatex/MockLpTokenFactory.sol\":\"MockLpTokenFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/fatex/IMockLpTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IMockLpTokenFactory {\\n\\n    function create(\\n        address _lpToken,\\n        address _rewardController\\n    ) external returns (address);\\n\\n}\\n\",\"keccak256\":\"0xabb2a643dfacb042f2576058dd7e06d8fcc6aad51883637525b7921c8eb19c69\",\"license\":\"MIT\"},\"contracts/fatex/MockLpToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract MockLpToken {\\n\\n    address internal rewardController;\\n    address internal lpToken;\\n\\n    event MockLpTokenCreated(address indexed lpToken);\\n\\n    constructor(\\n        address _lpToken,\\n        address _rewardController\\n    ) public {\\n        lpToken = _lpToken;\\n        rewardController = _rewardController;\\n        emit MockLpTokenCreated(_lpToken);\\n    }\\n\\n    function balanceOf(address) external view returns (uint) {\\n        return IERC20(lpToken).balanceOf(rewardController);\\n    }\\n\\n}\",\"keccak256\":\"0x2fad3394e9b8060a88c2b3939e8d8a4fb666ceb421e3a40733d7c8991d46d24f\",\"license\":\"MIT\"},\"contracts/fatex/MockLpTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IMockLpTokenFactory.sol\\\";\\nimport \\\"./MockLpToken.sol\\\";\\n\\ncontract MockLpTokenFactory is IMockLpTokenFactory {\\n\\n    function create(\\n        address _lpToken,\\n        address _rewardController\\n    ) external override returns (address) {\\n        return address(new MockLpToken(_lpToken, _rewardController));\\n    }\\n\\n}\\n\",\"keccak256\":\"0xb9d296bccfbd24d1667284ae22fe2df1ff529e06704a3c6c9e2e10a2ea651178\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610328806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633e68680a14610030575b600080fd5b61006b6004803603604081101561004657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610094565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b600082826040516100a4906100ec565b73ffffffffffffffffffffffffffffffffffffffff928316815291166020820152604080519182900301906000f0801580156100e4573d6000803e3d6000fd5b509392505050565b6101f9806100fa8339019056fe608060405234801561001057600080fd5b506040516101f93803806101f98339818101604052604081101561003357600080fd5b508051602090910151600180546001600160a01b038085166001600160a01b0319928316811790935560008054918516919092161781556040517f49d0df5d8a50b99470da831b5803d9bef1d23abef9165d3a92936cf1dd9adee79190a25050610157806100a26000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806370a0823114610030575b600080fd5b6100636004803603602081101561004657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610075565b60408051918252519081900360200190f35b60015460008054604080517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529051929391909116916370a0823191602480820192602092909190829003018186803b1580156100ef57600080fd5b505afa158015610103573d6000803e3d6000fd5b505050506040513d602081101561011957600080fd5b50519291505056fea26469706673582212202bba35ab1c4daee47dae98a35e152bc58d3fe226d6d9559227a140f98a67e7e964736f6c634300060c0033a2646970667358221220ef46eeab665dfa945a7eecb1ccefe031dc54554c01f35fe632548e0490a34baa64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80633e68680a14610030575b600080fd5b61006b6004803603604081101561004657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610094565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b600082826040516100a4906100ec565b73ffffffffffffffffffffffffffffffffffffffff928316815291166020820152604080519182900301906000f0801580156100e4573d6000803e3d6000fd5b509392505050565b6101f9806100fa8339019056fe608060405234801561001057600080fd5b506040516101f93803806101f98339818101604052604081101561003357600080fd5b508051602090910151600180546001600160a01b038085166001600160a01b0319928316811790935560008054918516919092161781556040517f49d0df5d8a50b99470da831b5803d9bef1d23abef9165d3a92936cf1dd9adee79190a25050610157806100a26000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806370a0823114610030575b600080fd5b6100636004803603602081101561004657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610075565b60408051918252519081900360200190f35b60015460008054604080517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529051929391909116916370a0823191602480820192602092909190829003018186803b1580156100ef57600080fd5b505afa158015610103573d6000803e3d6000fd5b505050506040513d602081101561011957600080fd5b50519291505056fea26469706673582212202bba35ab1c4daee47dae98a35e152bc58d3fe226d6d9559227a140f98a67e7e964736f6c634300060c0033a2646970667358221220ef46eeab665dfa945a7eecb1ccefe031dc54554c01f35fe632548e0490a34baa64736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}